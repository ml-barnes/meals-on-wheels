import React from "react";
import Table from "react-bootstrap/Table";
import Dropdown from "react-bootstrap/Dropdown";
import DropdownButton from "react-bootstrap/DropdownButton";
import { Map, Marker, TileLayer } from "react-leaflet";
import Container from "react-bootstrap/Container";
import L from "leaflet";
import "leaflet-extra-markers/dist/css/leaflet.extra-markers.min.css";
import "leaflet-extra-markers/dist/js/leaflet.extra-markers.js";
import * as turf from "@turf/turf";

class DisplayRoutesApp extends React.Component {
  constructor(props, context) {
    super(props, context);
    this.state = {
      activeDropdown: 1,
      data: [],
      filtered: []
    };
  }

  componentDidMount() {
    this.getData();
  }

  getData = () => {
    fetch("http://localhost:3001/api/driversList")
      .then(this.checkStatus)
      .then(this.parseJSON)
      .then(data => {
        this.setState({
          data,
          filtered: data
        });
        console.log(this.state.filtered);
      });
  };

  checkStatus(response) {
    if (response.status >= 200 && response.status < 300) {
      return response;
    }
    const error = new Error(`HTTP Error ${response.statusText}`);
    error.status = response.statusText;
    error.response = response;
    console.log(error); // eslint-disable-line no-console
    throw error;
  }

  parseJSON(response) {
    //console.log("Parse");
    return response.json();
  }

  handleSelect = eventKey => {
    console.log(eventKey);
  };

  render() {
    const position = [-45.87606, 170.348445];

    var blue1Marker = L.ExtraMarkers.icon({
      icon: "fa-number",
      number: 1,
      markerColor: "blue",
      iconColor: "white"
    });

    var blue2Marker = L.ExtraMarkers.icon({
      icon: "fa-number",
      number: 2,
      markerColor: "blue",
      iconColor: "white"
    });

    var blue3Marker = L.ExtraMarkers.icon({
      icon: "fa-number",
      number: 3,
      markerColor: "blue",
      iconColor: "white"
    });

    var type = "Point";
    var coordinates = [
      [-45.857316, 170.480968],
      [-45.871776, 170.349661],
      [-45.895979, 170.467773],
      [-45.853438, 170.530441],
      [-45.884452, 170.481002],
      [-45.900141, 170.50098],
      [-45.89537, 170.495685],
      [-45.8998, 170.510166],
      [-45.870052, 170.483357],
      [-45.866382, 170.456664],
      [-45.886912, 170.476482],
      [-45.899948, 170.52246],
      [-45.889366, 170.415102],
      [-45.903188, 170.486937],
      [-45.907125, 170.505923],
      [-45.89956, 170.498134],
      [-45.852815, 170.463374],
      [-45.902145, 170.507348],
      [-45.9057, 170.493088],
      [-45.898513, 170.507445],
      [-45.853692, 170.523196],
      [-45.892816, 170.533049],
      [-45.876386, 170.491464],
      [-45.874903, 170.343586],
      [-45.846447, 170.516527],
      [-45.870034, 170.486488],
      [-45.903053, 170.507743],
      [-45.905685, 170.509533],
      [-45.895028, 170.488292],
      [-45.894943, 170.483772],
      [-45.910962, 170.488139],
      [-45.903123, 170.498447],
      [-45.897187, 170.483516],
      [-45.880285, 170.359564],
      [-45.889023, 170.473217],
      [-45.904077, 170.492946],
      [-45.863555, 170.497037],
      [-45.910033, 170.462219],
      [-45.910883, 170.476542],
      [-45.896099, 170.486647],
      [-45.865286, 170.459736],
      [-45.859428, 170.517111],
      [-45.865547, 170.502559],
      [-45.852676, 170.518627],
      [-45.900842, 170.489728],
      [-45.907458, 170.501401],
      [-45.8972, 170.5173],
      [-45.852037, 170.479808],
      [-45.898021, 170.493905],
      [-45.880556, 170.499002],
      [-45.900795, 170.510958],
      [-45.899464, 170.479957],
      [-45.859061, 170.498165],
      [-45.89539, 170.424902],
      [-45.897227, 170.497706],
      [-45.896849, 170.497646],
      [-45.854464, 170.491551],
      [-45.903953, 170.498441],
      [-45.882473, 170.359651],
      [-45.890347, 170.418634],
      [-45.896498, 170.523561],
      [-45.896846, 170.481514],
      [-45.902864, 170.431721],
      [-45.895867, 170.529574],
      [-45.838147, 170.529178],
      [-45.898612, 170.49748],
      [-45.852883, 170.532678],
      [-45.904105, 170.514209],
      [-45.881983, 170.360087],
      [-45.898396, 170.396506],
      [-45.878232, 170.347856],
      [-45.882856, 170.353414],
      [-45.902342, 170.533493],
      [-45.854098, 170.489565],
      [-45.891188, 170.354623],
      [-45.898547, 170.508154],
      [-45.899136, 170.498265],
      [-45.901322, 170.498615],
      [-45.875422, 170.477697],
      [-45.868157, 170.488068],
      [-45.910653, 170.477256],
      [-45.90052, 170.511822],
      [-45.90227, 170.507179],
      [-45.902719, 170.488152],
      [-45.904333, 170.49009],
      [-45.873158, 170.334187],
      [-45.857433, 170.462259],
      [-45.895084, 170.487507],
      [-45.899978, 170.511437],
      [-45.872378, 170.352228],
      [-45.889568, 170.477531],
      [-45.902485, 170.481808],
      [-45.909147, 170.48809],
      [-45.852871, 170.506762],
      [-45.905423, 170.507941],
      [-45.889829, 170.473986],
      [-45.854446, 170.470285],
      [-45.904376, 170.490039],
      [-45.90969, 170.472364],
      [-45.889439, 170.54045],
      [-45.907007, 170.491279],
      [-45.81641, 170.621788],
      [-45.905224, 170.500123],
      [-45.906758, 170.506706],
      [-45.902141, 170.438385],
      [-45.897954, 170.429294],
      [-45.903006, 170.508558],
      [-45.897456, 170.523403],
      [-45.905263, 170.488494],
      [-45.852268, 170.469969],
      [-45.897597, 170.516066],
      [-45.895896, 170.486899],
      [-45.864019, 170.499917],
      [-45.860848, 170.503739],
      [-45.868969, 170.342194],
      [-45.876764, 170.358831],
      [-45.899628, 170.419577],
      [-45.88167, 170.495134],
      [-45.877469, 170.478604],
      [-45.905128, 170.508575],
      [-45.860895, 170.504558],
      [-45.860875, 170.504548],
      [-45.90149, 170.508616],
      [-45.902657, 170.510091],
      [-45.885674, 170.528431],
      [-45.883383, 170.54192],
      [-45.897354, 170.499055],
      [-45.874744, 170.482556],
      [-45.879318, 170.361529],
      [-45.902708, 170.488891],
      [-45.876411, 170.345508],
      [-45.89785, 170.537027],
      [-45.861138, 170.49401],
      [-45.887596, 170.528936],
      [-45.898108, 170.495594],
      [-45.901761, 170.528519],
      [-45.883934, 170.548958],
      [-45.900142, 170.505578],
      [-45.904025, 170.503909],
      [-45.8993, 170.47909],
      [-45.907945, 170.421001],
      [-45.902366, 170.430999],
      [-45.883633, 170.487114],
      [-45.898131, 170.487596],
      [-45.868922, 170.484749],
      [-45.878522, 170.344499],
      [-45.886821, 170.524124],
      [-45.865655, 170.48426],
      [-45.882033, 170.530158],
      [-45.855317, 170.502392],
      [-45.896202, 170.492983],
      [-45.875378, 170.477491],
      [-45.906385, 170.483981],
      [-45.848919, 170.532465],
      [-45.88255, 170.49361],
      [-45.841254, 170.500414],
      [-45.904202, 170.49151],
      [-45.903157, 170.429432],
      [-45.855506, 170.4658],
      [-45.895552, 170.398548],
      [-45.900703, 170.536117],
      [-45.903658, 170.486405],
      [-45.897872, 170.506266],
      [-45.86992, 170.461554],
      [-45.904574, 170.466839],
      [-45.880377, 170.478317],
      [-45.883744, 170.354285],
      [-45.904659, 170.504557],
      [-45.869708, 170.49209],
      [-45.894943, 170.483772],
      [-45.900378, 170.495615],
      [-45.896133, 170.486658],
      [-45.885756, 170.538617],
      [-45.89719, 170.495357],
      [-45.867042, 170.490495],
      [-45.894704, 170.488019],
      [-45.892984, 170.35354],
      [-45.895725, 170.489513],
      [-45.905276, 170.492639],
      [-45.880646, 170.494168],
      [-45.848307, 170.51397],
      [-45.905429, 170.486197],
      [-45.860266, 170.50394],
      [-45.869197, 170.48353],
      [-45.89982, 170.478457],
      [-45.902646, 170.432557],
      [-45.871796, 170.35054],
      [-45.901822, 170.516421],
      [-45.898842, 170.487062],
      [-45.896831, 170.481765],
      [-45.883222, 170.347015],
      [-45.874086, 170.484606],
      [-45.850169, 170.525989],
      [-45.906529, 170.504489],
      [-45.894242, 170.489536],
      [-45.898326, 170.509194],
      [-45.903713, 170.486393],
      [-45.882711, 170.470136],
      [-45.852799, 170.476756],
      [-45.895652, 170.425856],
      [-45.852922, 170.479643],
      [-45.897735, 170.429462],
      [-45.881541, 170.490382],
      [-45.898023, 170.496039],
      [-45.895653, 170.4883],
      [-45.851626, 170.522611],
      [-45.898285, 170.507612],
      [-45.90041, 170.490719],
      [-45.899531, 170.479525],
      [-45.867692, 170.462034],
      [-45.91362, 170.487186],
      [-45.899792, 170.499256],
      [-45.903445, 170.495346],
      [-45.884718, 170.549313],
      [-45.84477, 170.536721],
      [-45.897091, 170.52328],
      [-45.900412, 170.504875],
      [-45.908109, 170.477532],
      [-45.853355, 170.526732],
      [-45.898076, 170.503517],
      [-45.844215, 170.49947],
      [-45.910296, 170.480761],
      [-45.880587, 170.360922],
      [-45.88304, 170.36111],
      [-45.907138, 170.490216],
      [-45.87009, 170.362496],
      [-45.898802, 170.499358],
      [-45.898802, 170.499358],
      [-45.90134, 170.495387],
      [-45.907753, 170.484969],
      [-45.883647, 170.359719],
      [-45.886181, 170.526438],
      [-45.901092, 170.498123],
      [-45.856733, 170.50366],
      [-45.883279, 170.478979],
      [-45.882544, 170.361006],
      [-45.90278, 170.484162],
      [-45.900658, 170.517709],
      [-45.91274, 170.465929],
      [-45.896908, 170.505358],
      [-45.898471, 170.498183],
      [-45.871641, 170.480149],
      [-45.898651, 170.51735],
      [-45.883772, 170.358084],
      [-45.896726, 170.494411],
      [-45.854436, 170.503579],
      [-45.888195, 170.477503],
      [-45.905971, 170.501613],
      [-45.905363, 170.49078],
      [-45.89702, 170.485457],
      [-45.903887, 170.426208],
      [-45.868449, 170.481918],
      [-45.843289, 170.516284],
      [-45.898263, 170.476597],
      [-45.8996, 170.473077],
      [-45.849678, 170.48223],
      [-45.898061, 170.500656],
      [-45.875461, 170.337393],
      [-45.899587, 170.332032],
      [-45.869635, 170.343951],
      [-45.894922, 170.489997],
      [-45.89482, 170.502284],
      [-45.8954, 170.529612],
      [-45.899732, 170.500199],
      [-45.903113, 170.455083],
      [-45.886912, 170.525009],
      [-45.899969, 170.510172],
      [-45.888153, 170.532108],
      [-45.896581, 170.506322],
      [-45.899962, 170.510383],
      [-45.882966, 170.473105],
      [-45.898045, 170.482543],
      [-45.897952, 170.495527],
      [-45.896096, 170.486712],
      [-45.896096, 170.486712],
      [-45.902318, 170.507031],
      [-45.859765, 170.507854],
      [-45.87357, 170.349807],
      [-45.897856, 170.400548],
      [-45.866181, 170.452002],
      [-45.900305, 170.536608],
      [-45.905166, 170.395082],
      [-45.884613, 170.494567],
      [-45.893996, 170.533427],
      [-45.847334, 170.5168],
      [-45.904822, 170.508343],
      [-45.903277, 170.512856],
      [-45.887528, 170.478291],
      [-45.901683, 170.506612],
      [-45.854934, 170.522177],
      [-45.875942, 170.346267],
      [-45.896273, 170.525561],
      [-45.898731, 170.506888],
      [-45.855414, 170.477838],
      [-45.907917, 170.48699],
      [-45.8824, 170.360809],
      [-45.902715, 170.511252],
      [-45.898021, 170.506702],
      [-45.898504, 170.419467],
      [-45.899686, 170.510398],
      [-45.872438, 170.498063],
      [-45.906779, 170.503595],
      [-45.872277, 170.484572],
      [-45.868906, 170.463993],
      [-45.90276, 170.472104],
      [-45.897127, 170.51767],
      [-45.862125, 170.492557],
      [-45.872201, 170.345611],
      [-45.896102, 170.486725],
      [-45.877849, 170.359103],
      [-45.910616, 170.477338],
      [-45.89936, 170.495618],
      [-45.899264, 170.498419],
      [-45.898041, 170.506605],
      [-45.855775, 170.505235],
      [-45.881958, 170.360426],
      [-45.90778, 170.490074],
      [-45.906443, 170.504664],
      [-45.865681, 170.485618],
      [-45.857491, 170.503988],
      [-45.882719, 170.361091],
      [-45.895299, 170.495757],
      [-45.902696, 170.483665],
      [-45.874903, 170.343586],
      [-45.901874, 170.506628],
      [-45.879609, 170.492644],
      [-45.871512, 170.343983],
      [-45.849477, 170.533192],
      [-45.884041, 170.493137],
      [-45.847706, 170.533924],
      [-45.902197, 170.496602],
      [-45.863834, 170.457707],
      [-45.902347, 170.416129],
      [-45.900088, 170.51595],
      [-45.897417, 170.481629],
      [-45.905478, 170.507606],
      [-45.89605, 170.493324],
      [-45.884114, 170.358987],
      [-45.903658, 170.486384],
      [-45.875363, 170.497855],
      [-45.898334, 170.538429],
      [-45.845078, 170.538899],
      [-45.90026, 170.500709],
      [-45.86193, 170.480962],
      [-45.905452, 170.488871],
      [-45.852421, 170.482743],
      [-45.899829, 170.500664],
      [-45.90298, 170.508633],
      [-45.890102, 170.47758],
      [-45.857604, 170.503352],
      [-45.87166, 170.345687],
      [-45.923005, 170.4035],
      [-45.868603, 170.487849],
      [-45.900279, 170.511581],
      [-45.903091, 170.429889],
      [-45.895414, 170.487155],
      [-45.842686, 170.502802],
      [-45.89613, 170.486642],
      [-45.869605, 170.473745],
      [-45.859471, 170.484319],
      [-45.869251, 170.486672],
      [-45.902861, 170.507236],
      [-45.890629, 170.495505],
      [-45.900119, 170.478107],
      [-45.874567, 170.331449],
      [-45.896122, 170.486615],
      [-45.902174, 170.500761],
      [-45.891671, 170.49398],
      [-45.883341, 170.494206],
      [-45.899032, 170.498758],
      [-45.90153, 170.516817],
      [-45.868008, 170.49449],
      [-45.873199, 170.480644],
      [-45.871113, 170.346278],
      [-45.882244, 170.359686],
      [-45.883455, 170.472456],
      [-45.904461, 170.510572],
      [-45.871887, 170.332788],
      [-45.900118, 170.502441],
      [-45.906451, 170.499906],
      [-45.895581, 170.486644],
      [-45.878441, 170.345802],
      [-45.877478, 170.361398],
      [-45.87361, 170.36444],
      [-45.863148, 170.510464],
      [-45.886288, 170.480205],
      [-45.893173, 170.536136],
      [-45.861121, 170.489866],
      [-45.897479, 170.511215],
      [-45.895825, 170.495218],
      [-45.871494, 170.484012],
      [-45.89824, 170.482685],
      [-45.885201, 170.351126],
      [-45.861162, 170.489887],
      [-45.899298, 170.421892],
      [-45.88926, 170.529105],
      [-45.910964, 170.477091],
      [-45.878599, 170.362292],
      [-45.871151, 170.340184],
      [-45.8786, 170.362301],
      [-45.88649, 170.535979],
      [-45.853458, 170.48528],
      [-45.899303, 170.510217],
      [-45.901288, 170.507911],
      [-45.90206, 170.497025],
      [-45.886461, 170.528838],
      [-45.899458, 170.49896],
      [-45.906344, 170.504755],
      [-45.902649, 170.502258],
      [-45.871824, 170.353423],
      [-45.87501, 170.34567],
      [-45.899323, 170.495133],
      [-45.899451, 170.49522],
      [-45.899773, 170.430493],
      [-45.87403, 170.467197],
      [-45.877455, 170.49174],
      [-45.876382, 170.346779],
      [-45.896318, 170.483345],
      [-45.904588, 170.473778],
      [-45.870473, 170.484232],
      [-45.902526, 170.489096],
      [-45.906285, 170.493063],
      [-45.900467, 170.508347],
      [-45.89591, 170.39509],
      [-45.913785, 170.486538],
      [-45.848693, 170.529758],
      [-45.854867, 170.466581],
      [-45.897947, 170.494204],
      [-45.842823, 170.5158],
      [-45.847374, 170.512204],
      [-45.897118, 170.39811],
      [-45.896188, 170.520822],
      [-45.899546, 170.505908],
      [-45.903092, 170.506282],
      [-45.899743, 170.511392],
      [-45.899349, 170.387174],
      [-45.899319, 170.486862],
      [-45.884228, 170.494929],
      [-45.897183, 170.505607],
      [-45.877648, 170.359902],
      [-45.851654, 170.535516],
      [-45.847971, 170.533311],
      [-45.847843, 170.512273],
      [-45.897774, 170.511223],
      [-45.806919, 170.62198],
      [-45.875837, 170.346164],
      [-45.886989, 170.542736],
      [-45.897969, 170.495824],
      [-45.891103, 170.418394],
      [-45.897847, 170.482348],
      [-45.90229, 170.488241],
      [-45.85375, 170.476943],
      [-45.883839, 170.357906],
      [-45.901643, 170.485811],
      [-45.882883, 170.479153],
      [-45.896928, 170.495019],
      [-45.872721, 170.495554],
      [-45.902716, 170.438811],
      [-45.886161, 170.477682],
      [-45.896951, 170.494966],
      [-45.897249, 170.518329],
      [-45.87694, 170.345493],
      [-45.856411, 170.513799],
      [-45.901356, 170.516475],
      [-45.844476, 170.515351],
      [-45.906044, 170.488514],
      [-45.906861, 170.506374],
      [-45.869684, 170.501827],
      [-45.883786, 170.469518],
      [-45.909111, 170.486069],
      [-45.901151, 170.499148],
      [-45.884524, 170.544612],
      [-45.856789, 170.485498],
      [-45.883922, 170.35746],
      [-45.899777, 170.491187],
      [-45.881257, 170.350837],
      [-45.899496, 170.504819],
      [-45.886018, 170.529274],
      [-45.889865, 170.527581],
      [-45.850596, 170.515292],
      [-45.897247, 170.50774],
      [-45.903508, 170.430078],
      [-45.899395, 170.506758],
      [-45.883305, 170.476933],
      [-45.896543, 170.47395],
      [-45.894897, 170.423663],
      [-45.877393, 170.347184],
      [-45.89501, 170.472211],
      [-45.896265, 170.497574],
      [-45.896564, 170.484105],
      [-45.868639, 170.480968],
      [-45.896195, 170.427212]
    ];

    //const geometry = turf.geometry(type, coordinates);

    //console.log(geometry);
    var points = turf.randomPoint(100);
    var maxDistance = 1000000;
    var clustered = turf.clustersDbscan(points, maxDistance);

    //console.log(points);
    //console.log(clustered.features[0].geometry.coordinates);

    return (
      <React.Fragment>
        {this.header()}
        <Container>
          <Map
            className="markercluster-map"
            center={position}
            zoom={15}
            minZoom={15}
            maxZoom={15}
            zoomControl={false}
            style={{
              width: "50%",
              float: "right",
              marginBottom: "2%",
              marginTop: "2%"
            }}
            dragging={false}
            ref="map"
          >
            <TileLayer
              url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
              attribution="&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors"
            />

            <Marker icon={blue1Marker} position={[-45.87206, 170.345445]} />

            <Marker icon={blue2Marker} position={[-45.87506, 170.342445]} />

            <Marker icon={blue3Marker} position={[-45.87906, 170.340445]} />
          </Map>

          {this.state.filtered.map(driver => (
            <React.Fragment>
              <br />
              <br />
              <br />
              <br />

              <h1>
                {driver.detailData.lastName} {driver.detailData.firstName}
              </h1>
              <h2>Delivery Date: 16th May 2019</h2>
              <br />
              <h3>Area: Waverley </h3>
              <h3>Number of assigned customers: 4 </h3>

              <Table>
                <thead>
                  <tr>
                    <th>#</th>
                    <th>Customer Name</th>
                    <th>Customer Address</th>
                    <th>Customer Phone Number</th>
                    <th>Items to deliver</th>
                    <th>Notes/Instructions</th>
                    <th>Settings</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>1</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                  </tr>
                  <tr>
                    <td>2</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                  </tr>
                  <tr>
                    <td>3</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                    <td>Table cell</td>
                  </tr>
                </tbody>
              </Table>
              <br />

              <Table bordered>
                <tbody>
                  <tr>
                    <td>
                      <b>Number of standard meals</b>
                    </td>
                    <td />
                    <td>
                      <b>Desserts Standard</b>
                    </td>
                    <td />
                    <td>
                      <b>Extra Foods</b>
                    </td>
                    <td />
                    <td />
                    <td />
                  </tr>
                  <tr>
                    <td>
                      <b>Number of special meals</b>
                    </td>
                    <td>[]</td>
                    <td>
                      <b>Desserts Named</b>
                    </td>
                    <td>[]</td>
                    <td>
                      <b>Soup</b>
                    </td>
                    <td>[]</td>
                    <td>
                      <b>Frozen Meals</b>
                    </td>
                    <td>[]</td>
                  </tr>
                  <tr>
                    <td />
                    <td />
                    <td>
                      <b>No Dessert</b>
                    </td>
                    <td />
                    <td>
                      <b>Sandwiches</b>
                    </td>
                    <td />
                    <td>
                      <b>Savouries</b>
                    </td>
                    <td />
                  </tr>

                  <tr>
                    <td>
                      <b>Total number of meals</b>
                    </td>
                    <td />
                    <td>
                      <b>Total number of desserts</b>
                    </td>
                    <td />
                    <td>
                      <b>Baking</b>
                    </td>
                    <td />
                    <td>
                      <b>Fruit</b>
                    </td>
                    <td />
                  </tr>
                </tbody>
              </Table>
            </React.Fragment>
          ))}
        </Container>
      </React.Fragment>
    );
  }

  header = () => {
    return (
      <React.Fragment>
        {/*<Row
                    style={{
                        border: "1px solid #ececed",
                        alignItems: "center",
                        textAlign: "center"
                    }}
                >
                    <Col

                        style={{
                            margin: "1%",
                            textAlign: "left"
                        }}
                    >*/}
        <h2>Meal Delivery Schedules</h2>
        <DropdownButton
          style={{ textAlign: "right" }}
          onSelect={this.handleSelect}
          title="Dropdown right"
          id="dropdown-menu-align-right"
        >
          <Dropdown.Item eventKey="0">Show all</Dropdown.Item>
          <Dropdown.Divider />
          {this.state.filtered.map(driver => (
            <Dropdown.Item eventKey={driver.ID}>
              {driver.detailData.lastName} {driver.detailData.firstName}
            </Dropdown.Item>
          ))}
        </DropdownButton>;
        <DropdownButton
          style={{ textAlign: "right" }}
          title="Date"
          id="dropdown-menu-align-right"
        >
          <Dropdown.Item eventKey="1">Show all</Dropdown.Item>
          <Dropdown.Divider />
          {this.state.filtered.map(driver => <Dropdown.Item eventKey="4" />)}
        </DropdownButton>
        {/*<ReactFontAwesome

                    name='print'
                    size='4x'
                    style={{ textAlign: "right", textShadow: '0 1px 0 rgba(0, 0, 0, 0.1)' }}
                />*/}
        {/*<FaPrint size={50} spin style={{ textShadow: '0 1px 0 rgba(0, 0, 0, 0.1)' }}/>{" "}*/}
        {/*</Col>*/}
        {/*</Row>*/}
      </React.Fragment>
    );
  };
}

export default DisplayRoutesApp;
